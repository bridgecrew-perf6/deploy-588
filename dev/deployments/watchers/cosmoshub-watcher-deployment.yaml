apiVersion: apps/v1
kind: Deployment
metadata:
  name: cosmoshub-watcher-deploy
  labels:
    app: cosmoshub-watcher-app
  annotations:
spec:
  selector:
    matchLabels:
      app: cosmoshub-watcher-app
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: cosmoshub-watcher-app
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - cosmoshub-watcher-app
              topologyKey: "kubernetes.io/hostname"

      containers:
      - name: cosmoshub-4
        image: registry.digitalocean.com/mapofzones/cosmos-watcher-cosmoshub:latest
        env:
          - name: chain_id
            value: "cosmoshub-4"
          - name: rabbitmq
            valueFrom:
              secretKeyRef:
                name: devsecret
                key: watcher_rabbitmq
          - name: graphql
            valueFrom:
              secretKeyRef:
                name: devsecret
                key: db_graphql
        imagePullPolicy: Always
        resources:
          requests:
            memory: "130Mi"
            cpu: "50m"
          limits:
            memory: "175Mi"
            cpu: "100m"
