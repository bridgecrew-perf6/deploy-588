apiVersion: apps/v1
kind: Deployment
metadata:
  name: example-deploy
  labels:
    app: example-app
  annotations:
spec:
  selector:
    matchLabels:
      app: example-app
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: example-app
    spec:
      containers:
      - name: example-app
        image: registry.digitalocean.com/mapofzones/cosmos-watcher@sha256:bf3eec19304c4467dd9b02808a06db75125461795f7f388217c238cb6717afa8
        env:
          - name: rpc
            value: "http://18.220.101.192:26657"
          - name: rabbitmq
            valueFrom:
              secretKeyRef:
                name: devsecret
                key: watcher_rabbitmq
          - name: graphql
            valueFrom:
              secretKeyRef:
                name: devsecret
                key: db_graphql
        imagePullPolicy: Always
        # ports:
        # - containerPort: 5000
        # resources:
        #   requests:
        #     memory: "64Mi"
        #     cpu: "50m"
        #   limits:
        #     memory: "256Mi"
        #     cpu: "500m"
        volumeMounts:
        - name: config-volume
          mountPath: /configs/
      - name: example-app2
        image: registry.digitalocean.com/mapofzones/cosmos-watcher@sha256:bf3eec19304c4467dd9b02808a06db75125461795f7f388217c238cb6717afa8
        env:
          - name: rpc
            value: "http://34.123.30.100:26657"
          - name: rabbitmq
            valueFrom:
              secretKeyRef:
                name: devsecret
                key: watcher_rabbitmq
          - name: graphql
            valueFrom:
              secretKeyRef:
                name: devsecret
                key: db_graphql
        imagePullPolicy: Always
        # ports:
        # - containerPort: 5000
        # resources:
        #   requests:
        #     memory: "64Mi"
        #     cpu: "50m"
        #   limits:
        #     memory: "256Mi"
        #     cpu: "500m"
        volumeMounts:
        - name: config-volume
          mountPath: /configs/
      volumes:
      - name: config-volume
        configMap:
          name: example-config #name of our configmap object